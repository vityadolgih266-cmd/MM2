-- Скрипт Scrixat and Cherry для Evade [ТЕОРЕТИЧЕСКАЯ ВЕРСИЯ v2.0]
-- Обновлено и улучшено
-- Примечание: Клиентский скрипт для Roblox Evade. Используйте осторожно.

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "Scrixat and Cherry v2.0",
    LoadingTitle = "Загрузка улучшенного скрипта для Evade",
    LoadingSubtitle = "Теоретическое обновление",
    ConfigurationSaving = { Enabled = true, FolderName = "ScrixatAndCherry", FileName = "ConfigV2" },
    Discord = { Enabled = false, Invite = "", RememberJoins = true },
    KeySystem = false
})

-- Вкладка "Основные функции"
local MainTab = Window:CreateTab("Основные функции", nil)

-- == ПЕРЕРАБОТАННАЯ СИСТЕМА СКОРОСТИ == --
local SpeedValue = 16
local SpeedBoostActive = false

local function UpdateSpeed()
    local character = LocalPlayer.Character
    if character and character:FindFirstChildOfClass("Humanoid") then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        -- Используем сеттер для большей "безопасности"
        humanoid.WalkSpeed = SpeedBoostActive and (SpeedValue * 1.5) or SpeedValue
    end
end

local WalkSpeedSlider = MainTab:CreateSlider({
    Name = "Базовая скорость",
    Range = {16, 100}, -- Снижен максимум для меньшего подозрения
    Increment = 1,
    Suffix = "Скорость",
    CurrentValue = 16,
    Flag = "WalkSpeed",
    Callback = function(Value)
        SpeedValue = Value
        UpdateSpeed()
    end,
})

local SpeedBoostToggle = MainTab:CreateToggle({
    Name = "Ускорение (1.5x)",
    CurrentValue = false,
    Flag = "SpeedBoost",
    Callback = function(State)
        SpeedBoostActive = State
        UpdateSpeed()
    end,
})

-- == УЛУЧШЕННАЯ СИСТЕМА ПРЫЖКОВ == --
local JumpHeight = 50
local AirControlEnabled = false
local AirControlVelocity -- Сохраняем один объект для контроля

local function UpdateJump()
    local character = LocalPlayer.Character
    if character and character:FindFirstChildOfClass("Humanoid") then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        humanoid.JumpHeight = JumpHeight
    end
end

local JumpHeightSlider = MainTab:CreateSlider({
    Name = "Высота прыжка",
    Range = {50, 150}, -- Снижен максимум
    Increment = 1,
    Suffix = "Высота",
    CurrentValue = 50,
    Flag = "JumpHeight",
    Callback = function(Value)
        JumpHeight = Value
        UpdateJump()
    end,
})

local AirControlToggle = MainTab:CreateToggle({
    Name = "Управление в воздухе",
    CurrentValue = false,
    Flag = "AirControl",
    Callback = function(State)
        AirControlEnabled = State
        if not State and AirControlVelocity then
            AirControlVelocity:Destroy()
            AirControlVelocity = nil
        end
    end,
})

-- Исправленная логика управления в воздухе (без утечек памяти)
RunService.Heartbeat:Connect(function()
    if AirControlEnabled then
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") and character:FindFirstChildOfClass("Humanoid") then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local moveDirection = humanoid.MoveDirection
            
            if (humanoid:GetState() == Enum.HumanoidStateType.Jumping or humanoid:GetState() == Enum.HumanoidStateType.Freefall) and moveDirection.Magnitude > 0 then
                if not AirControlVelocity or AirControlVelocity.Parent == nil then
                    AirControlVelocity = Instance.new("BodyVelocity")
                    AirControlVelocity.MaxForce = Vector3.new(4000, 0, 4000) -- Уменьшенная сила
                    AirControlVelocity.Parent = character.HumanoidRootPart
                end
                AirControlVelocity.Velocity = moveDirection * (SpeedValue * 0.8) -- Уменьшенный множитель
            elseif AirControlVelocity then
                AirControlVelocity.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end
end)

-- == ИСПРАВЛЕННЫЕ БЕСКОНЕЧНЫЕ ПРЫЖКИ == --
local InfiniteJumpEnabled = false

UserInputService.JumpRequest:Connect(function()
    if InfiniteJumpEnabled then
        local character = LocalPlayer.Character
        if character and character:FindFirstChildOfClass("Humanoid") then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid:GetState() == Enum.HumanoidStateType.Jumping or humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                humanoid:ChangeState("Jumping")
            end
        end
    end
end)

local InfiniteJumpToggle = MainTab:CreateToggle({
    Name = "Бесконечные прыжки",
    CurrentValue = false,
    Flag = "InfiniteJump",
    Callback = function(State)
        InfiniteJumpEnabled = State
    end,
})

-- == УЛУЧШЕННЫЙ ESP == --
local ESPTab = Window:CreateTab("ESP функции", nil)

local ESPInstances = {}
local NextbotESPEnabled = false
local PlayerESPEnabled = false

local function CreateESP(part, name, color)
    if not part or not part.Parent then return end
    
    local Billboard = Instance.new("BillboardGui")
    Billboard.Adornee = part
    Billboard.Size = UDim2.new(0, 100, 0, 50)
    Billboard.StudsOffset = Vector3.new(0, 2, 0)
    Billboard.AlwaysOnTop = true
    Billboard.Enabled = true
    Billboard.Parent = part

    local TextLabel = Instance.new("TextLabel")
    TextLabel.BackgroundTransparency = 1
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.Text = name
    TextLabel.TextColor3 = color
    TextLabel.TextSize = 14
    TextLabel.TextStrokeTransparency = 0.5
    TextLabel.Parent = Billboard

    table.insert(ESPInstances, Billboard)
    return Billboard
end

local function ClearESP()
    for _, esp in ipairs(ESPInstances) do
        if esp then
            esp:Destroy()
        end
    end
    ESPInstances = {}
end

local function UpdateNextbotESP()
    ClearESP()
    if not NextbotESPEnabled then return end
    
    local nextbotsFolder = workspace:FindFirstChild("Nextbots")
    if nextbotsFolder then
        for _, nextbot in ipairs(nextbotsFolder:GetChildren()) do
            if nextbot:IsA("Model") and nextbot:FindFirstChild("HumanoidRootPart") then
                CreateESP(nextbot.HumanoidRootPart, nextbot.Name, Color3.fromRGB(255, 0, 0))
            end
        end
    end
end

local function UpdatePlayerESP()
    ClearESP()
    if not PlayerESPEnabled then return end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                CreateESP(rootPart, player.Name, Color3.fromRGB(0, 255, 0))
            end
        end
    end
end

-- ESP для некстботов
local NextbotESPToggle = ESPTab:CreateToggle({
    Name = "ESP некстботов",
    CurrentValue = false,
    Flag = "NextbotESP",
    Callback = function(State)
        NextbotESPEnabled = State
        if State then
            UpdateNextbotESP()
            -- Теоретическое отслеживание новых некстботов
            local nextbotsFolder = workspace:WaitForChild("Nextbots", 5)
            if nextbotsFolder then
                nextbotsFolder.ChildAdded:Connect(function()
                    if NextbotESPEnabled then
                        task.wait(0.5) -- Задержка для инициализации модели
                        UpdateNextbotESP()
                    end
                end)
            end
        else
            ClearESP()
        end
    end,
})

-- ESP для игроков
local PlayerESPToggle = ESPTab:CreateToggle({
    Name = "ESP игроков",
    CurrentValue = false,
    Flag = "PlayerESP",
    Callback = function(State)
        PlayerESPEnabled = State
        if State then
            UpdatePlayerESP()
        else
            ClearESP()
        end
    end,
})

-- Авто-обновление ESP при появлении персонажей
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if PlayerESPEnabled then
            task.wait(1)
            UpdatePlayerESP()
        end
    end)
end)

-- == ПЕРЕРАБОТАННЫЙ ФАРМ == --
local FarmTab = Window:CreateTab("Фарм функции", nil)

-- ИСПРАВЛЕННЫЙ АВТО-ПРЫЖОК (BHOP)
local AutoJumpEnabled = false
local WasOnGround = false

RunService.Heartbeat:Connect(function()
    if AutoJumpEnabled then
        local character = LocalPlayer.Character
        if character and character:FindFirstChildOfClass("Humanoid") then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local isOnGround = humanoid.FloorMaterial ~= Enum.Material.Air
            
            -- Прыжок при касании земли и движении
            if isOnGround and not WasOnGround and humanoid.MoveDirection.Magnitude > 0 then
                humanoid:ChangeState("Jumping")
            end
            
            WasOnGround = isOnGround
        end
    end
end)

local AutoJumpToggle = FarmTab:CreateToggle({
    Name = "Авто-прыжки (BHOP)",
    CurrentValue = false,
    Flag = "AutoJump",
    Callback = function(State)
        AutoJumpEnabled = State
        WasOnGround = false
    end,
})

-- ТЕОРЕТИЧЕСКАЯ СИСТЕМА АВТО-ВОЗРОЖДЕНИЯ
local AutoReviveEnabled = false

local function AttemptAutoRevive()
    -- Теоретический поиск правильного RemoteEvent для возрождения
    local possibleRemotes = {
        workspace:FindFirstChild("ReviveRemote"),
        workspace:FindFirstChild("ReviveEvent"),
        game.ReplicatedStorage:FindFirstChild("ReviveRemote"),
        game.ReplicatedStorage:FindFirstChild("ReviveEvent"),
        game.ReplicatedStorage:FindFirstChild("Remotes"):FindFirstChild("Revive") -- Предполагаемая структура
    }
    
    for _, remote in ipairs(possibleRemotes) do
        if remote and remote:IsA("RemoteEvent") then
            remote:FireServer()
            return true
        elseif remote and remote:IsA("RemoteFunction") then
            remote:InvokeServer()
            return true
        end
    end
    return false
end

RunService.Heartbeat:Connect(function()
    if AutoReviveEnabled then
        local character = LocalPlayer.Character
        if character and character:FindFirstChildOfClass("Humanoid") then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid.Health <= 0 then
                task.wait(2) -- Задержка перед попыткой возрождения
                AttemptAutoRevive()
            end
        end
    end
end)

local AutoReviveToggle = FarmTab:CreateToggle({
    Name = "Авто-возрождение (ТЕОРЕТИЧЕСКОЕ)",
    CurrentValue = false,
    Flag = "AutoRevive",
    Callback = function(State)
        AutoReviveEnabled = State
        if State then
            Rayfield:Notify({
                Title = "Внимание",
                Content = "Функция экспериментальная. Может не работать.",
                Duration = 3,
            })
        end
    end,
})

-- Инициализация при загрузке персонажа
LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid", 5)
    task.wait(1) -- Задержка для полной инициализации
    UpdateSpeed()
    UpdateJump()
    if PlayerESPEnabled then UpdatePlayerESP() end
    if NextbotESPEnabled then UpdateNextbotESP() end
end)

-- Уведомление о загрузке
Rayfield:Notify({
    Title = "Scrixat and Cherry v2.0 загружен",
    Content = "Теоретическое обновление активировано. Критические ошибки исправлены.",
    Duration = 5,
    Image = 4483362458,
    Actions = {},
})
